"""initial migration

Revision ID: 9279ab63fb41
Revises: 
Create Date: 2025-01-02 18:24:20.991283

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9279ab63fb41'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('class_code', sa.String(length=8), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_code')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('is_teacher', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('google_id', sa.String(length=256), nullable=True),
    sa.Column('avatar_url', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('google_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('operation', sa.String(length=20), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('required_problems', sa.Integer(), nullable=True),
    sa.Column('min_correct_percentage', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('custom_number1', sa.Integer(), nullable=True),
    sa.Column('custom_number2', sa.Integer(), nullable=True),
    sa.Column('max_attempts_per_problem', sa.Integer(), nullable=True),
    sa.Column('show_solution_after_attempts', sa.Integer(), nullable=True),
    sa.Column('requires_work_shown', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('partial_credit', sa.Boolean(), nullable=True),
    sa.Column('late_submission_policy', sa.String(length=20), nullable=True),
    sa.Column('visibility', sa.String(length=20), nullable=True),
    sa.Column('practice_mode_enabled', sa.Boolean(), nullable=True),
    sa.Column('hint_system', sa.JSON(), nullable=True),
    sa.Column('video_tutorial_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('available_from', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('is_graded', sa.Boolean(), nullable=True),
    sa.Column('graded_at', sa.DateTime(), nullable=True),
    sa.Column('is_class_assignment', sa.Boolean(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('practice_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('operation', sa.String(length=20), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('problem', sa.String(length=50), nullable=False),
    sa.Column('user_answer', sa.Integer(), nullable=False),
    sa.Column('correct_answer', sa.Integer(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('time_taken', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_class',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('class_id', 'student_id')
    )
    op.create_table('teacher_class',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('class_id', 'teacher_id')
    )
    op.create_table('assignment_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('problems_attempted', sa.Integer(), nullable=True),
    sa.Column('problems_correct', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('started', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('total_time_spent', sa.Integer(), nullable=True),
    sa.Column('streak_count', sa.Integer(), nullable=True),
    sa.Column('mastery_level', sa.Float(), nullable=True),
    sa.Column('last_attempt_at', sa.DateTime(), nullable=True),
    sa.Column('practice_mode', sa.Boolean(), nullable=True),
    sa.Column('student_notes', sa.Text(), nullable=True),
    sa.Column('teacher_comment', sa.String(length=500), nullable=True),
    sa.Column('grade_override', sa.Integer(), nullable=True),
    sa.Column('needs_review', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prerequisite_assignments',
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('prerequisite_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['assignment.id'], ),
    sa.PrimaryKeyConstraint('assignment_id', 'prerequisite_id')
    )
    op.create_table('student_assignments',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'assignment_id')
    )
    op.create_table('attempt_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('progress_id', sa.Integer(), nullable=False),
    sa.Column('problem', sa.String(length=100), nullable=True),
    sa.Column('student_answer', sa.String(length=100), nullable=True),
    sa.Column('correct_answer', sa.String(length=100), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('work_shown', sa.Text(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['progress_id'], ['assignment_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('attempt_history')
    op.drop_table('student_assignments')
    op.drop_table('prerequisite_assignments')
    op.drop_table('assignment_progress')
    op.drop_table('teacher_class')
    op.drop_table('student_class')
    op.drop_table('practice_attempt')
    op.drop_table('assignment')
    op.drop_table('user')
    op.drop_table('class')
    # ### end Alembic commands ###
